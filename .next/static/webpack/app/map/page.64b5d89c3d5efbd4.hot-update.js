"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/map/page",{

/***/ "(app-pages-browser)/./src/components/Map.tsx":
/*!********************************!*\
  !*** ./src/components/Map.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Map; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mapbox-gl */ \"(app-pages-browser)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mapbox-gl/dist/mapbox-gl.css */ \"(app-pages-browser)/./node_modules/mapbox-gl/dist/mapbox-gl.css\");\n/* harmony import */ var _SearchPanel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SearchPanel */ \"(app-pages-browser)/./src/components/SearchPanel.tsx\");\n/* harmony import */ var _lib_pointsOfInterest__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/pointsOfInterest */ \"(app-pages-browser)/./src/lib/pointsOfInterest.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n(mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().accessToken) = \"pk.eyJ1Ijoicm91dG9waWEtYWkiLCJhIjoiY200MWkzb25xMHFtcjJxcHRmOTE3NTlrNSJ9.d2Ds8SJXnQzc2W1o50D76Q\";\nfunction Map() {\n    _s();\n    const mapContainer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const mapInstance = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const locationMarker = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const routeSource = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [showSearch, setShowSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [userLocation, setUserLocation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Create route between two points\n    const createRoute = async (start, end)=>{\n        try {\n            var _mapInstance_current, _mapInstance_current1;\n            // Get route from Mapbox Directions API\n            const query = await fetch(\"https://api.mapbox.com/directions/v5/mapbox/walking/\".concat(start[0], \",\").concat(start[1], \";\").concat(end[0], \",\").concat(end[1], \"?steps=true&geometries=geojson&access_token=\").concat((mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().accessToken)));\n            const json = await query.json();\n            const data = json.routes[0];\n            const route = data.geometry.coordinates;\n            // Add the route to the map\n            if (!((_mapInstance_current = mapInstance.current) === null || _mapInstance_current === void 0 ? void 0 : _mapInstance_current.getSource(\"route\"))) {\n                var // Add two sources: one for the full route, one for the animated portion\n                _mapInstance_current2, _mapInstance_current3, // Add the faded background line\n                _mapInstance_current4, // Add the animated line\n                _mapInstance_current5;\n                (_mapInstance_current2 = mapInstance.current) === null || _mapInstance_current2 === void 0 ? void 0 : _mapInstance_current2.addSource(\"route-full\", {\n                    type: \"geojson\",\n                    data: {\n                        type: \"Feature\",\n                        properties: {},\n                        geometry: {\n                            type: \"LineString\",\n                            coordinates: route\n                        }\n                    }\n                });\n                (_mapInstance_current3 = mapInstance.current) === null || _mapInstance_current3 === void 0 ? void 0 : _mapInstance_current3.addSource(\"route-animated\", {\n                    type: \"geojson\",\n                    data: {\n                        type: \"Feature\",\n                        properties: {},\n                        geometry: {\n                            type: \"LineString\",\n                            coordinates: [\n                                route[0]\n                            ] // Start with just the first point\n                        }\n                    }\n                });\n                (_mapInstance_current4 = mapInstance.current) === null || _mapInstance_current4 === void 0 ? void 0 : _mapInstance_current4.addLayer({\n                    id: \"route-full\",\n                    type: \"line\",\n                    source: \"route-full\",\n                    layout: {\n                        \"line-join\": \"round\",\n                        \"line-cap\": \"round\"\n                    },\n                    paint: {\n                        \"line-color\": \"#10b981\",\n                        \"line-width\": 4,\n                        \"line-opacity\": 0.15\n                    }\n                });\n                (_mapInstance_current5 = mapInstance.current) === null || _mapInstance_current5 === void 0 ? void 0 : _mapInstance_current5.addLayer({\n                    id: \"route-animated\",\n                    type: \"line\",\n                    source: \"route-animated\",\n                    layout: {\n                        \"line-join\": \"round\",\n                        \"line-cap\": \"round\"\n                    },\n                    paint: {\n                        \"line-color\": \"#10b981\",\n                        \"line-width\": 4,\n                        \"line-opacity\": [\n                            \"interpolate\",\n                            [\n                                \"linear\"\n                            ],\n                            [\n                                \"line-progress\"\n                            ],\n                            0,\n                            0.9,\n                            0.1,\n                            0.6,\n                            1,\n                            0.9\n                        ],\n                        \"line-gradient\": [\n                            \"interpolate\",\n                            [\n                                \"linear\"\n                            ],\n                            [\n                                \"line-progress\"\n                            ],\n                            0,\n                            \"#10b98100\",\n                            0.1,\n                            \"#10b981\",\n                            0.9,\n                            \"#10b981\",\n                            1,\n                            \"#10b98100\"\n                        ]\n                    }\n                });\n                // Calculate route bounds with padding\n                const bounds = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().LngLatBounds)();\n                route.forEach((coord)=>bounds.extend(coord));\n                // Get start and end camera states\n                const startBounds = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().LngLatBounds)().extend(route[0]).extend(route[Math.min(5, route.length - 1)]); // Start with view of first few points\n                const endBounds = bounds;\n                // Animate the line with synchronized camera movement\n                let start;\n                const duration = 2000; // Animation duration in ms\n                const delay = 2000; // Delay before animation starts\n                setTimeout(()=>{\n                    var // Initial camera position\n                    _mapInstance_current;\n                    function animate(timestamp) {\n                        if (!start) start = timestamp;\n                        const progress = (timestamp - start) / duration;\n                        if (progress <= 1) {\n                            var _mapInstance_current, // Smoothly update camera\n                            _mapInstance_current1;\n                            // Animate the line\n                            const currentRouteLength = Math.max(2, Math.floor(progress * route.length));\n                            const currentRoute = {\n                                type: \"Feature\",\n                                properties: {},\n                                geometry: {\n                                    type: \"LineString\",\n                                    coordinates: route.slice(0, currentRouteLength)\n                                }\n                            };\n                            (_mapInstance_current = mapInstance.current) === null || _mapInstance_current === void 0 ? void 0 : _mapInstance_current.getSource(\"route-animated\").setData(currentRoute);\n                            // Calculate current camera bounds\n                            const currentBounds = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().LngLatBounds)();\n                            route.slice(0, currentRouteLength).forEach((coord)=>currentBounds.extend(coord));\n                            (_mapInstance_current1 = mapInstance.current) === null || _mapInstance_current1 === void 0 ? void 0 : _mapInstance_current1.fitBounds(currentBounds, {\n                                padding: {\n                                    top: 100,\n                                    bottom: 100,\n                                    left: 100,\n                                    right: 100\n                                },\n                                duration: 0,\n                                linear: true // Use linear easing for smoother movement\n                            });\n                            requestAnimationFrame(animate);\n                        } else {\n                            var // Final camera position\n                            _mapInstance_current2;\n                            (_mapInstance_current2 = mapInstance.current) === null || _mapInstance_current2 === void 0 ? void 0 : _mapInstance_current2.fitBounds(endBounds, {\n                                padding: {\n                                    top: 100,\n                                    bottom: 100,\n                                    left: 100,\n                                    right: 100\n                                },\n                                duration: 1000 // Smooth final adjustment\n                            });\n                            // After line is drawn, add POIs with animation\n                            setTimeout(()=>addPOIsToMap(pois), 300);\n                        }\n                    }\n                    (_mapInstance_current = mapInstance.current) === null || _mapInstance_current === void 0 ? void 0 : _mapInstance_current.fitBounds(startBounds, {\n                        padding: {\n                            top: 50,\n                            bottom: 50,\n                            left: 50,\n                            right: 50\n                        },\n                        duration: 1000\n                    });\n                    // Start animation after initial camera movement\n                    setTimeout(()=>{\n                        requestAnimationFrame(animate);\n                    }, 1000);\n                }, delay);\n            } else {\n                var _mapInstance_current6;\n                // Update existing route\n                const routeSource = (_mapInstance_current6 = mapInstance.current) === null || _mapInstance_current6 === void 0 ? void 0 : _mapInstance_current6.getSource(\"route\");\n                routeSource.setData({\n                    type: \"Feature\",\n                    properties: {},\n                    geometry: {\n                        type: \"LineString\",\n                        coordinates: route\n                    }\n                });\n            }\n            // Find and add POIs along route\n            const pois = await (0,_lib_pointsOfInterest__WEBPACK_IMPORTED_MODULE_5__.findPOIsAlongRoute)(route);\n            addPOIsToMap(pois);\n            // Fit map to show entire route\n            const coordinates = route;\n            const bounds = coordinates.reduce((bounds, coord)=>{\n                return bounds.extend(coord);\n            }, new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().LngLatBounds)(coordinates[0], coordinates[0]));\n            (_mapInstance_current1 = mapInstance.current) === null || _mapInstance_current1 === void 0 ? void 0 : _mapInstance_current1.fitBounds(bounds, {\n                padding: 50\n            });\n        } catch (error) {\n            console.error(\"Error creating route:\", error);\n        }\n    };\n    // Handle location selection from search\n    const handleLocationSelect = (coordinates)=>{\n        if (!userLocation) return;\n        createRoute(userLocation, coordinates);\n        setShowSearch(false);\n    };\n    // Add POI markers to map\n    const addPOIsToMap = (pois)=>{\n        // Group POIs by proximity\n        const groupedPois = groupNearbyPois(pois);\n        groupedPois.forEach((group, groupIndex)=>{\n            group.forEach((poi, poiIndex)=>{\n                const el = document.createElement(\"div\");\n                el.className = \"poi-marker poi-\".concat(poi.type);\n                // Add data attributes for grouping\n                el.dataset.groupId = groupIndex.toString();\n                el.dataset.poiIndex = poiIndex.toString();\n                const popup = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Popup)({\n                    offset: 25,\n                    closeButton: true,\n                    closeOnClick: false\n                }).setHTML('\\n          <div style=\"background: #1c1917; color: #ffffff; padding: 12px;\">\\n            <h3 style=\"color: #10b981; margin: 0 0 4px 0; font-size: 14px;\">'.concat(poi.name, '</h3>\\n            <p style=\"color: #a8a29e; margin: 0; font-size: 12px;\">').concat(poi.description || \"\", \"</p>\\n          </div>\\n        \"));\n                const marker = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Marker)({\n                    element: el,\n                    anchor: \"bottom\"\n                }).setLngLat(poi.coordinates).setPopup(popup).addTo(mapInstance.current);\n                // Add hover handlers\n                el.addEventListener(\"mouseenter\", ()=>{\n                    const group = document.querySelectorAll('[data-group-id=\"'.concat(groupIndex, '\"]'));\n                    spreadMarkers(Array.from(group), groupIndex);\n                });\n                el.addEventListener(\"mouseleave\", ()=>{\n                    const group = document.querySelectorAll('[data-group-id=\"'.concat(groupIndex, '\"]'));\n                    resetMarkers(Array.from(group));\n                });\n                // Animate marker appearance\n                setTimeout(()=>{\n                    el.style.opacity = \"1\";\n                    el.style.transform = \"translateY(0)\";\n                }, poiIndex * 150);\n            });\n        });\n    };\n    // Helper function to group nearby POIs\n    const groupNearbyPois = (pois)=>{\n        const groups = [];\n        const proximityThreshold = 0.0005; // Adjust this value based on your needs\n        pois.forEach((poi)=>{\n            let foundGroup = false;\n            for (const group of groups){\n                if (group.some((existingPoi)=>Math.abs(existingPoi.coordinates[0] - poi.coordinates[0]) < proximityThreshold && Math.abs(existingPoi.coordinates[1] - poi.coordinates[1]) < proximityThreshold)) {\n                    group.push(poi);\n                    foundGroup = true;\n                    break;\n                }\n            }\n            if (!foundGroup) {\n                groups.push([\n                    poi\n                ]);\n            }\n        });\n        return groups;\n    };\n    // Helper functions for marker spreading\n    const spreadMarkers = (markers, groupIndex)=>{\n        const radius = 30; // Spread radius in pixels\n        markers.forEach((marker, index)=>{\n            const angle = index * (360 / markers.length) * (Math.PI / 180);\n            const x = Math.cos(angle) * radius;\n            const y = Math.sin(angle) * radius;\n            marker.style.transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n            marker.style.zIndex = \"1000\";\n        });\n    };\n    const resetMarkers = (markers)=>{\n        markers.forEach((marker)=>{\n            marker.style.transform = \"translate(0, 0)\";\n            marker.style.zIndex = \"auto\";\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!mapContainer.current) return;\n        // Initialize map\n        mapInstance.current = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Map)({\n            container: mapContainer.current,\n            style: \"mapbox://styles/mapbox/dark-v11\",\n            center: [\n                -105.2705,\n                40.0150\n            ],\n            zoom: 14\n        });\n        // Get user location\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition((position)=>{\n                var // Center map on location\n                _mapInstance_current;\n                const location = [\n                    position.coords.longitude,\n                    position.coords.latitude\n                ];\n                setUserLocation(location);\n                // Create custom HTML element for marker\n                const el = document.createElement(\"div\");\n                el.className = \"custom-marker\";\n                const dot = document.createElement(\"div\");\n                dot.className = \"marker-dot\";\n                el.appendChild(dot);\n                const pulse = document.createElement(\"div\");\n                pulse.className = \"marker-pulse\";\n                el.appendChild(pulse);\n                // Create new marker with custom element\n                locationMarker.current = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Marker)({\n                    element: el,\n                    anchor: \"center\"\n                }).setLngLat(location).addTo(mapInstance.current);\n                (_mapInstance_current = mapInstance.current) === null || _mapInstance_current === void 0 ? void 0 : _mapInstance_current.flyTo({\n                    center: location,\n                    zoom: 15,\n                    essential: true\n                });\n            }, (error)=>console.error(\"Error getting location:\", error), {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            });\n        }\n        return ()=>{\n            if (locationMarker.current) {\n                locationMarker.current.remove();\n            }\n            if (mapInstance.current) {\n                mapInstance.current.remove();\n            }\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full h-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: mapContainer,\n                className: \"absolute inset-0\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\blewi\\\\Routopia\\\\src\\\\components\\\\Map.tsx\",\n                lineNumber: 399,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>setShowSearch(true),\n                className: \"absolute top-4 left-4 px-4 py-2 bg-stone-800 hover:bg-stone-700 text-white rounded-md shadow-lg\",\n                children: \"Set Destination\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\blewi\\\\Routopia\\\\src\\\\components\\\\Map.tsx\",\n                lineNumber: 402,\n                columnNumber: 7\n            }, this),\n            showSearch && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SearchPanel__WEBPACK_IMPORTED_MODULE_4__.SearchPanel, {\n                onClose: ()=>setShowSearch(false),\n                onLocationSelect: handleLocationSelect\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\blewi\\\\Routopia\\\\src\\\\components\\\\Map.tsx\",\n                lineNumber: 411,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\blewi\\\\Routopia\\\\src\\\\components\\\\Map.tsx\",\n        lineNumber: 398,\n        columnNumber: 5\n    }, this);\n}\n_s(Map, \"a9zEwjw+TkuRbQ38evpao2rqgmE=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Map.tsx\n"));

/***/ })

});